import{_ as d,c as e,a2 as a,o}from"./chunks/framework.By2iWbs8.js";const u=JSON.parse('{"title":"文字识别(OCR)","description":"","frontmatter":{},"headers":[],"relativePath":"develop_doc/script/ocr.md","filePath":"develop_doc/script/ocr.md","lastUpdated":1739460181000}'),r={name:"develop_doc/script/ocr.md"};function h(c,t,n,i,l,s){return o(),e("div",null,t[0]||(t[0]=[a('<h1 id="文字识别-ocr" tabindex="-1">文字识别(OCR) <a class="header-anchor" href="#文字识别-ocr" aria-label="Permalink to &quot;文字识别(OCR)&quot;">​</a></h1><h2 id="ocr-将会使用c-重构-作为项baas的子进程提供服务-提供以下api" tabindex="-1">OCR 将会使用C++重构, 作为项BAAS的子进程提供服务, 提供以下api <a class="header-anchor" href="#ocr-将会使用c-重构-作为项baas的子进程提供服务-提供以下api" aria-label="Permalink to &quot;OCR 将会使用C++重构, 作为项BAAS的子进程提供服务, 提供以下api&quot;">​</a></h2><h2 id="基础信息" tabindex="-1"><strong>基础信息</strong> <a class="header-anchor" href="#基础信息" aria-label="Permalink to &quot;**基础信息**&quot;">​</a></h2><table tabindex="0"><thead><tr><th>项目</th><th>说明</th></tr></thead><tbody><tr><td><strong>地址</strong></td><td><code>localhost:1145</code></td></tr></tbody></table><h2 id="初始化模型" tabindex="-1">初始化模型 <a class="header-anchor" href="#初始化模型" aria-label="Permalink to &quot;初始化模型&quot;">​</a></h2><h4 id="请求信息" tabindex="-1"><strong>请求信息</strong> <a class="header-anchor" href="#请求信息" aria-label="Permalink to &quot;**请求信息**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>方法</th><th>URL</th></tr></thead><tbody><tr><td><code>POST</code></td><td><code>/init_model</code></td></tr></tbody></table><h4 id="请求头" tabindex="-1"><strong>请求头</strong> <a class="header-anchor" href="#请求头" aria-label="Permalink to &quot;**请求头**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>示例值</th></tr></thead><tbody><tr><td><code>Content-Type</code></td><td>指定请求的数据格式</td><td><code>application/json</code></td></tr></tbody></table><h4 id="请求体" tabindex="-1"><strong>请求体</strong> <a class="header-anchor" href="#请求体" aria-label="Permalink to &quot;**请求体**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td><code>language</code></td><td><code>string</code></td><td>是</td><td>语言</td></tr><tr><td><code>flagGpu</code></td><td><code>int</code></td><td>否</td><td>gpu id</td></tr><tr><td><code>numThread</code></td><td><code>unsigned int</code></td><td>否</td><td>推理线程数</td></tr></tbody></table><h2 id="获取图像中的文字位置" tabindex="-1">获取图像中的文字位置 <a class="header-anchor" href="#获取图像中的文字位置" aria-label="Permalink to &quot;获取图像中的文字位置&quot;">​</a></h2><h4 id="请求信息-1" tabindex="-1"><strong>请求信息</strong> <a class="header-anchor" href="#请求信息-1" aria-label="Permalink to &quot;**请求信息**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>方法</th><th>URL</th></tr></thead><tbody><tr><td><code>POST</code></td><td><code>/get_text_box</code></td></tr></tbody></table><h4 id="请求头-1" tabindex="-1"><strong>请求头</strong> <a class="header-anchor" href="#请求头-1" aria-label="Permalink to &quot;**请求头**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>示例值</th></tr></thead><tbody><tr><td><code>Content-Type</code></td><td>指定请求的数据格式</td><td><code>application/json</code></td></tr></tbody></table><h4 id="请求体-1" tabindex="-1"><strong>请求体</strong> <a class="header-anchor" href="#请求体-1" aria-label="Permalink to &quot;**请求体**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td><code>/image/pass_method</code></td><td><code>unsigned int</code></td><td>是</td><td>图像传递方式</td></tr><tr><td><code>/image/local_path</code></td><td><code>string</code></td><td>否</td><td>图像本地路径</td></tr><tr><td><code>/imgage/shared_memory_name</code></td><td><code>string</code></td><td>否</td><td>图像数据所在的共享内存名</td></tr></tbody></table>',18)]))}const p=d(r,[["render",h]]);export{u as __pageData,p as default};
