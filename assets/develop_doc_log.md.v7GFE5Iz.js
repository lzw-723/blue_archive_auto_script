import{_ as s,c as i,a2 as e,o as r}from"./chunks/framework.By2iWbs8.js";const g=JSON.parse('{"title":"日志 class Logger","description":"","frontmatter":{},"headers":[],"relativePath":"develop_doc/log.md","filePath":"develop_doc/log.md","lastUpdated":1737812602000}'),t={name:"develop_doc/log.md"};function n(l,a,o,h,d,p){return r(),i("div",null,a[0]||(a[0]=[e('<h1 id="日志-class-logger" tabindex="-1">日志 <code>class Logger</code> <a class="header-anchor" href="#日志-class-logger" aria-label="Permalink to &quot;日志 `class Logger`&quot;">​</a></h1><p>对应文件路径 : <code>&quot;core/utils.py&quot;</code></p><h2 id="使用须知" tabindex="-1">使用须知 <a class="header-anchor" href="#使用须知" aria-label="Permalink to &quot;使用须知&quot;">​</a></h2><h3 id="_1-语言" tabindex="-1">1.语言 <a class="header-anchor" href="#_1-语言" aria-label="Permalink to &quot;1.语言&quot;">​</a></h3><p>日志的所有<strong>静态字符串(Static String)<strong>请都使用</strong>英文(English)</strong></p><h3 id="_2-使用方法" tabindex="-1">2.使用方法 <a class="header-anchor" href="#_2-使用方法" aria-label="Permalink to &quot;2.使用方法&quot;">​</a></h3><ul><li>Baas_thread的成员logger是一个Logger对象</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Info Message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.warning(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Warning Message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.error(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Error Message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.critical(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Critical Message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.line()</span></span></code></pre></div><h3 id="何时使用对应级别日志" tabindex="-1">何时使用对应级别日志 <a class="header-anchor" href="#何时使用对应级别日志" aria-label="Permalink to &quot;何时使用对应级别日志&quot;">​</a></h3><h4 id="info" tabindex="-1"><code>info</code> <a class="header-anchor" href="#info" aria-label="Permalink to &quot;```info```&quot;">​</a></h4><p>BAAS正常运行日志</p><h4 id="warning" tabindex="-1"><code>warning</code> <a class="header-anchor" href="#warning" aria-label="Permalink to &quot;```warning```&quot;">​</a></h4><p>遇到了一些异常情况但是BAAS可以自行解决的异常</p><h4 id="error" tabindex="-1"><code>error</code> <a class="header-anchor" href="#error" aria-label="Permalink to &quot;```error```&quot;">​</a></h4><p><strong>BAAS</strong>无法在当前任务模块自行解决的异常, 需要<strong>重启游戏和对应任务</strong>或停止<strong>BAAS</strong></p><h4 id="critical" tabindex="-1"><code>critical</code> <a class="header-anchor" href="#critical" aria-label="Permalink to &quot;```critical```&quot;">​</a></h4><p>参数设置错误无法启动<strong>BAAS</strong> <strong>|</strong> 无法执行当前任务 的异常, 通常每个独立的任务出先无法解决的错误时会使用<a href="#error"><strong>error</strong></a>级别</p><h4 id="line" tabindex="-1"><code>line</code> <a class="header-anchor" href="#line" aria-label="Permalink to &quot;```line```&quot;">​</a></h4><p>分隔上下文时使用, 用于区分不同的任务</p>',19)]))}const k=s(t,[["render",n]]);export{g as __pageData,k as default};
